@using MinimalApi.Models
@using MudBlazor  

<MudDialog>  
    <TitleContent>  
        <MudText Typo="Typo.h6">Edit Agent</MudText>  
    </TitleContent>  
    <DialogContent>  
        <MudForm @ref="_form" @bind-IsValid="_isValid">  
            <MudTextField @bind-Value="_agent.Name" Label="Name" Required="true" RequiredError="Name is required!" />  
            <MudTextField @bind-Value="_agent.Id" Label="Model ID" Required="true" RequiredError="Model ID is required!" />  
            <MudTextField @bind-Value="_agent.Instructions" Label="Instructions" Lines="5" />  
            <MudTextField @bind-Value="_agent.Description" Label="Description" Lines="3" />  
        </MudForm>  
    </DialogContent>  
    <DialogActions>  
        <MudButton OnClick="Cancel">Cancel</MudButton>  
        <MudButton Color="Color.Primary" OnClick="SubmitAsync" Disabled="!_isValid">Update</MudButton>  
    </DialogActions>  
</MudDialog>  

@code {  
    [CascadingParameter] public required IMudDialogInstance Dialog { get; set; }
    [Parameter] public AgentViewModel Agent { get; set; } = new();
    
    private AgentViewModel _agent = new AgentViewModel();  
    private MudForm _form;  
    private bool _isValid;  

    protected override void OnInitialized()
    {
        // Create a copy of the agent to avoid modifying the original until save
        _agent = new AgentViewModel
        {
            Id = Agent.Id,
            Name = Agent.Name,
            Instructions = Agent.Instructions,
            Description = Agent.Description,
            CreatedAt = Agent.CreatedAt
        };
    }

    private async Task SubmitAsync()  
    {  
        await _form.Validate();  
        if (_isValid)  
        {  
            Dialog.Close(DialogResult.Ok(_agent));  
        }  
    }  

    void Cancel() => Dialog.Cancel();  
}